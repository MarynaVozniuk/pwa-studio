########## PWA Studio Environment Variables ###################################
#
#   This file contains environment variables for a Magento PWA Studio project.
#   PWA Studio uses environment variables for all variable cross-project values
#   so that a developer or a build can override them with standard tooling.
#
#   This file belongs at the root of the PWA, and must be named `.env`.
#
#   Generated by @magento/pwa-buildpack.
#   Version: {{buildpackVersion}}
#   Created on: {{timestamp}}
#
################################################################################

{{#sections}}


########## Connecting to a Magento store ######################################
#
#   Connect to an instance of Magento 2.3.1 by specifying its public
#   domain name. **REQUIRED.** Example:
MAGENTO_BACKEND_URL="https://release-dev-231-npzdaky-zddsyhrdimyra.us-4.magentosite.cloud/"
#
###############################################################################

########## PWA Dev Server configuration #######################################
#
#
########## Custom domain configuration ########################################
#
#   PWA Studio comes with a feature that autogenerates a custom domain
#   to aid in distinguishing projects from one another, easily adding HTTPS,
#   and avoiding ServiceWorker collisions.
#
#   See documentation for details.
#   The following variables apply both to the development and staging modes.
#
#   This activates the secure host feature.
DEV_SERVER_PROVIDE_SECURE_HOST=1
#
#   By default your subdomain will be detected from your package.json name.
#   Use this to override it.
#   DEV_SERVER_CUSTOM_ORIGIN_SUBDOMAIN='custom-value'
#   This will prepend the uniquely generated domain with `custom-value`.
#
#   By default your custom host will be a subdomain of `local.pwadev`.
#   Use this to specify an entire domain, avoiding that TLD.
#   DEV_SERVER_CUSTOM_ORIGIN_EXACT_DOMAIN='my-favorite.pizza'
#
#   This activates the "unique hash" feature. PWA Studio generates a unique
#   sequence of letters and numbers, only 4 or 5 character long, to guarantee
#   uniqueness among your projects. The hash and port names are generated from
#   a hash of the current directory, so the URL stays constant if the instance
#   stays in the same place.
#   Set this to 0 to disable this feature.
DEV_SERVER_CUSTOM_ORIGIN_EXACT_DOMAIN=1
#
###############################################################################

########## UPWARD server production configuration #############################
#
#   The current PWA Studio production server is built with NodeJS; it is an
#   implementation of the UPWARD spec, and is theoretically swappable with
#   any other UPWARD-compliant server, with minimal configuration or code
#   changes. Since `upward-js` is the current default implementation, the
#   following environment variables configure `upward-js` specifically.
#
#   Give the server the location of the UPWARD YAML configuration file which
#   specifies its behavior. **REQUIRED**. For Venia, this is automatically set:
UPWARD_JS_UPWARD_PATH=venia-upward.yml
#
#   Tell the upward-js server to bind to a local address and port on launch.
#   Default 1 (true). **REQUIRED** unless you have a custom production setup.
UPWARD_JS_BIND_LOCAL=1
#
#   Tell the upward-js prod server to log the bound URL to stdout. Useful in
#   testing and discovery scenarios, but may be disabled in production.
UPWARD_JS_LOG_URL=1
#
#   Specify a port the upward-js prod-server will bind to. If unspecified, an
#   open port will be found.
#   UPWARD_JS_PORT=8008
#
###############################################################################

########## webpack-dev-server development configuration  ######################
#
#   Set variables for webpack-dev-server for editing and debugging scenarios.
#
#   Set this to 1 (true) to force ServiceWorkers in development.
#   DEV_SERVER_SERVICE_WORKER_ENABLED=1
#
###############################################################################

########## Braintree integration configuration  ######################
#
#   Set variables to control your Braintree integration.
#
#   Specify a Braintree token to direct the Venia storefront to communicate
#   with your braintree instance. You can find this value in Braintree's
#   Control Panel under Settings > API Keys > Tokenization Keys.
CHECKOUT_BRAINTREE_TOKEN=sandbox_8yrzsvtm_s2bg8fs563crhqzk
#
###############################################################################
